==================
bpfファイルシステム
==================

eBPFで扱うオブジェクト、マップとプログラムは、基本的には、作成（オープン）したプロセスが終了するとなくなってしまうが、
それを永続化する仕組みが用意されている。それが、bpfファイルシステムである。

準備
====

bpfファイルシステムをマウントする。

::

  $ sudo mount -t bpf none /sys/fs/bpf

マウントポイントは、どこでも良いが、/sys/fs/bpfにマウントするのが慣習となっている。

操作
====

ディレクトリ
----------

ディレクトリの作成、削除は、通常のmkdir、rmdirを使用して、自由に行える。

ファイルの作成
------------

bpfシステムコール(BPF_OBJ_PIN)を使用して作成する。通常のcreat(2)では作成できない。

ファイルの使用
------------

bpfシステムコール(BPF_OBJ_GET)を使用して、ファイルを使用(オープン)する。通常のopen(2)では、オープンできない。

ファイルの削除
------------

削除は、通常のrmコマンド(unlink(2))で行う。

補足、注意
=========

オブジェクト(マップ、プログラム)を永続化することにより、作成するプロセスと使用するプロセスを分けたり(作成するプロセスは、
終了してしまってもよい)、複数のプロセスでオブジェクトを参照したりすることができる。

ただし、永続化と言っても、実体はカーネル内のデータ構造にすぎず、bpfファイルシステムをアンマウントすれば、
消えてしまうので注意されたい。システムリブートをまたいで存在することはできない。

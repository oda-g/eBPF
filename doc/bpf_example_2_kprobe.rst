bpfプログラムの作成と実行(2)(kprobe)
=================================

ここでは、BPF_PROG_TYPE_KPROBEタイプ(以下、簡単にkprobeタイプと呼称)のbpfプログラムのロードと設定について説明する。

kprobeタイプのbpfプログラムは、設定したkprobeポイントで、bpfプログラムを実行するものである。kprobeポイントとしては、カーネル内関数のエントリポイント、リターンポイントが設定できる。(ここでは、エントリポイントのみ扱っている)

kprobeタイプのbpfプログラムのローダーは、一般的なコマンドとしては用意されていない。ここでは、自力でローダーを作成している。

ローダーの中身
------------

コードは、src/load_kprobe_bpf/load_kp_bpf.c 参照。以下、コードで何をやっているかとともにローダーの中身について説明する。

ローダーの仕様
^^^^^^^^^^^^

実行形式は、「load_kp_bpf オブジェクトファイル カーネル関数名」。

オブジェクトファイル中のbpfプログラムをロードし、指定したカーネル関数へのkprobe設定と、bpfプログラムの有効化を行う。その後、フォアグランドで待機状態となり、Ctl-C で終了するまで、bpfプログラムが有効となる。(Ctl-Cで終了時、後始末も行われる)

C言語プログラムの形式としては、mapsセクションにマップファイルの情報、progセクションにbpfプログラムを定義する。マップファイルの情報は、tcのものを踏襲した。tcと異なり、プログラムを格納するセクション名は、prog固定で、プログラムは１つしか定義できない。

オブジェクトファイルの読み込み
^^^^^^^^^^^^^^^^^^^^^^^^^^

progセクションにバイトコードが格納されているので、それを取り出す。マップを使っていなければ、それでお終いである。

マップを使っている場合は、マップをオープンして、そのファイルディスクリプタをバイトコードに埋めないといけない。その際、REL、STRTAB、SYMTABセクションを参照する。以下の手順で行う。

#. マップの参照箇所は、RELセクションを見れば分かる。RELセクションのエントリ数分ループする。
#. r_offsetがprogセクション中のオフセット。sizeof(struct bpf_insn)で割れば、instructionのindexが算出できる。
#. r_infoの中にSYMTABのインデックスが入っており(GELF_R_SYM(rel.r_info))、どのシンボルを参照しているか分かる。
#. 前記シンボル情報のst_valueにmapsセクション中のオフセットが入っている。mapsセクション中のそのオフセットから始まる、bpf_elf_map構造体を参照すればよい。また、シンボル情報のst_nameにシンボル名のSTRTABセクション中のオフセットが入っている。それでシンボル名(==マップ名)が分かる。
#. 前記マップがまだオープンされていなければ、オープンする。(参照箇所が複数あれば、既にオープンされていることもある)
#. instruction中にファイルディスクリプタを埋め込む。

コードは、load_kp_bpf.c get_bpf_obj_info 参照。

プログラムのロード
^^^^^^^^^^^^^^^^

load_kp_bpf.c load_program 参照。以下、注意事項のみ記す。

* | kern_versionに入れる値は、カーネルと合っていないといけない。
  | ubuntu 18.04 では、一番最初のカーネル(4.15.0-20-generic)では、で266001であったが、その後のupdate(ex. 4.15.0-34-generic or after)でで266002に代わっている。
  | 通常は、マクロLINUX_VERSION_CODE(linux/version.h)(266002になっている)を使用する。
  | 本コードは、4.15.0-20-genericで動作確認を行い、ヘッダと整合性が取れていなかったため、266001とハードコーディングしている。(何で、ヘッダと整合性が取れてないのかに関しては、詳細未追及）
  | 使用のカーネルに合わせ、コードを修正されたい。
* bpfプログラムにエラーがあったとき、log_bufにいろいろとメッセージが格納される。エラー発生時、log_bufの大きさが足りないと、ENOSPCのエラーとなり、エラーの解析ができないので、十分な大きさを用意すること。
* licenseは、GPL(コンパチ)でないといけない。本来は、tcの例のようにCプログラム側のセクションで指定すべきだが、本プログラムは決め打ちで入れている。

